@Entity - use to mark any class as Entity

@Table  - use to change the table details

@Id  - use to mark column as id(primary key)

@GeneratedValue - hibernate will automatically generate values for that using an internal sequence.Therefore, we don't have to set it manually.
			eg-	GenerationType.IDENTITY - Generate the primary key value by the database itself using the auto-increment column option
				GenerationType.AUTO	-  This is a default strategy and the persistence provider which automatically selects an appropriate generation strategy based on the database usage
				GenerationType.TABLE - This strategy uses a separate database table to generate primary key values. The persistence provider manages this table and uses it to allocate unique values for primary keys.
				GenerationType.SEQUENCE - This generation-type strategy uses a database sequence to generate primary key values.

@Column - Can be used to specify column mappings. For eg, to change column name in the associated table with dataabse

@Transient - This tells hibernate not to save the field

@Temporal - @Temporal over a date field tells hibernate the format in which the date needs to be saved.
			eg -	@Temporal(TemporalType.TIMESTAMP)
    				private Date utilDate;
     
				    @Temporal(TemporalType.DATE)
				    private Calendar utilCalendar;
			resource- https://thorben-janssen.com/hibernate-jpa-date-and-time/

@Lob - It tells hibernate that this is a large object, not a simple object.
			eg -	@Lob
     				private byte[] photo; 
     
			resource- https://www.geeksforgeeks.org/hibernate-lob-annotation/

@OneToOne, @OneToMany , @ManyToOne, @JoinColumn etc...